#cloud-config
autoinstall:
  version: 1
  identity:
    hostname: harmonic-live
    username: ubuntu
    password: $6$canonical.$0zWaW71A9ke9ASsaOcFTdQ2tx1gSmLxMPrsH0rF0Yb.2AEKNPV1lrF94n6YuPJmnUy2K2/JSDtxuiBDey6Lpa/
  keyboard:
    layout: us
    variant: ""
  proxy: http://44.10.4.101:8000
  apt:
    geoip: true
    primary:
      - arches: [default]
        uri: http://us.archive.ubuntu.com/ubuntu/
  refresh-installer:
    channel: edge
    update: yes
  ssh:
    install-server: true
    allow-pw: true
    authorized-keys: []
  storage:
    grub:
      update_nvram: true
    swap:
      size: 0
    layout:
      name: direct
  package_update: false
  package_upgrade: false
  late-commands:
    - echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' > /target/etc/sudoers.d/ubuntu
    - echo "---------------- Harmonic Installer - Update Sudoers (Add 'ubuntu' user with 'ALL=(ALL) NOPASSWD:ALL') -----------------"
    - echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' > /target/etc/sudoers.d/ubuntu
    - echo "---------------- Harmonic Installer - Configure SSHd (Allow Root Login) -----------------"
    - sed -i -e '/^[#]*PermitRootLogin/s/^.*$/PermitRootLogin yes/' /target/etc/ssh/sshd_config
    - echo "---------------- Harmonic Installer - Configure SSHd (Allow Password Login) -----------------"
    - sed -i -e '/^[#]*PasswordAuthentication/s/^.*$/PasswordAuthentication yes/' /target/etc/ssh/sshd_config
    - echo "---------------- Harmonic Installer - Setup (RESTARTING SSHd) -----------------"
    - systemctl restart ssh

  user-data:
    write_files:
      - path: /run/harmonic-installer.sh
        content: |
          #!/bin/bash -x
          ##############################################################################
          #
          #   harmonic-installer.sh
          #
          #   This script is executed either by 'harmonic-install.service' or by a
          #   user-provided 'cloud-init' configuration.
          #
          #   The harmonic-installer.sh script will then perform the following steps:
          #
          #   1. Download and install the ostree-production .deb packages from the
          #   MAAS webserver.
          #   2. Download the latest Apollo (Harmony cOS) .iso from the MAAS webserver.
          #   3. Create a /data directory and move the Apollo .iso into it.
          #   4. Run the 'ostree-production' commands to display and write the .iso
          #   to the system's physical disk (/dev/sda)
          #   5. Reboot the system to /dev/sda
          #
          #   The system will reboot into Harmony cOS
          # shellcheck disable=SC2155
          ##############################################################################

          export DEBIAN_FRONTEND=noninteractive
          export webserverHost="172.22.31.150"
          export webserverPort="8080"
          export apolloRelease="release-3.21.3.0-7+auto15"
          export apolloISO="APOLLO_PLATFORM-${apolloRelease}.iso"
          export ostreePackages="ostree-upgrade-bootstrap_2.0.41_all.deb ostree-upgrade_2.0.41_all.deb"
          export localAssets="$(mktemp -d)"
          export localData="/data"
          export physicalDisk="/dev/sda"

          unset http_proxy
          unset https_proxy
          unset no_proxy

          runPrint() {
          cat <<EOF
          ===========================================================
            $@
          ===========================================================
          EOF
          }

          for thisPackage in ${ostreePackages}; do
            runPrint "Downloading ${thisPackage}"
            wget "http://${webserverHost}:${webserverPort}/packages/${thisPackage}" -O "${localAssets}/${thisPackage}"

            runPrint "Installing ${thisPackage}"
            dpkg -i "${localAssets}/${thisPackage}"

          done

          runPrint "Creating /data directory"
          mkdir "${localData}"

          runPrint "Downloading ${apolloISO}"
          wget "http://${webserverHost}:${webserverPort}/apollo/latest" -O "${localData}/${apolloISO}"

          runPrint "Listing ISOs found in ${localData}"
          ostree-production list-isos

          runPrint "Writing contents of ${localData}"/"${apolloISO} to ${physicalDisk}"
          ostree-production -D "${physicalDisk}" from "${localData}"/"${apolloISO}"

    runcmd:
      - echo "---------------- Harmonic Installer - Install Script (RUNNING) -----------------"
      - /run/harmonic-installer.sh
      - echo "------------------- Harmonic Installer - Install Script (COMPLETED) ------------------"