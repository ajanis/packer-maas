#cloud-config
autoinstall:
  version: 1
  identity:
    hostname: harmonic-live
    username: ubuntu
    password: $6$canonical.$0zWaW71A9ke9ASsaOcFTdQ2tx1gSmLxMPrsH0rF0Yb.2AEKNPV1lrF94n6YuPJmnUy2K2/JSDtxuiBDey6Lpa/
  keyboard:
    layout: us
    variant: ""
  proxy: http://44.10.4.101:8000
  apt:
    geoip: true
    primary:
      - arches: [default]
        uri: http://us.archive.ubuntu.com/ubuntu/
  refresh-installer:
    channel: edge
    update: yes
  ssh:
    install-server: true
    allow-pw: true
    authorized-keys: []
  storage:
    grub:
      update_nvram: true
    swap:
      size: 0
    layout:
      name: direct
  package_update: false
  package_upgrade: false
  early-commands:
    00-mkdir: ["sudo", "mkdir", "-p", "/run/harmonic"]
    10-sudo: ["echo", "ubuntu ALL=(ALL) NOPASSWD:ALL", "tee", "-a", "/target/etc/sudoers.d/ubuntu"]
    20-rootlogin: ["sed", "-i", "-e", "/^[#]*PermitRootLogin/s/^.*$/PermitRootLogin yes/", "/target/etc/ssh/sshd_config"]
    30-pwlogin: ["sed", "-i", "-e", "/^[#]*PasswordAuthentication/s/^.*$/PasswordAuthentication yes/", "/target/etc/ssh/sshd_config"]
    40-sshrestart: ["sudo", "systemctl", "restart", "ssh"]
    50-authkey: ["sudo", "sed", "-r", "-i", "s/^.+(ssh-.+)$/\\1/", "/root/.ssh/authorized_keys"]


  user-data:
    write_files:
      - path: /run/harmonic/harmonic-installer.sh
        permissions: '0755'
        content: |
          #!/bin/bash
          ##############################################################################
          #
          #   harmonic-installer.sh
          #
          #   This script is executed either by 'harmonic-install.service' or by a
          #   user-provided 'cloud-init' configuration.
          #
          #   The harmonic-installer.sh script will then perform the following steps:
          #
          #   1. Download and install the ostree-production .deb packages from the
          #   MAAS webserver.
          #   2. Download the latest Apollo (Harmony cOS) .iso from the MAAS webserver.
          #   3. Create a /data directory and move the Apollo .iso into it.
          #   4. Run the 'ostree-production' commands to display and write the .iso
          #   to the system's physical disk (/dev/sda)
          #   5. Reboot the system to /dev/sda
          #
          #   The system will reboot into Harmony cOS
          #
          ##############################################################################

          # shellcheck disable=SC2312

          # Main Script Variable Exports
          export webserverHost="172.22.31.150"
          export webserverPort="8080"
          export apolloRelease="release-3.21.3.0-7+auto15"
          export apolloISO="APOLLO_PLATFORM-${apolloRelease}.iso"
          export ostreePackages="ostree-upgrade-bootstrap_2.0.41_all.deb ostree-upgrade_2.0.41_all.deb"
          export proxyURI="http://proxy4.spoc.charterlab.com:8080"
          export proxyIgnore="localhost,127.0.0.1,127.0.0.53,spoc.charterlab.com,nfv.charterlab.com,proxy4.spoc.charterlab.com,44.10.4.101/32,44.10.4.200/32,172.22.0.0/16"
          export workingDir="/run/harmonic"
          export isoDir="/data"
          export physicalDisk="/dev/sda"
          export proxy=0
          export download=0
          export install=0

          runPrint() {
          cat << EOF
          ===========================================================
            $@
          ===========================================================
          EOF
          }

          # Set up script logging
          : > /var/log/harmonic
          exec 2> >(tee -a /var/log/harmonic >&2) > >(tee -a /var/log/harmonic)

          # Check for "${physicalDisk}
          # Remove any existing LVMs and zero boot partition if found
          # Otherwise exit
          if ! lsblk "${physicalDisk}" >/dev/null 2>&1; then
            runPrint "Physical disk ${physicalDisk} not found.  Harmonic cOS installation can not run on this host."
            exit 1
          else
            runPrint "Physical disk ${physicalDisk} found.  Proceeding with Harmonic cOS installation..."
            vgchange -an
            umount -lf /dev/sda
            dd if=/dev/zero of="${physicalDisk}" bs=1M count=100
          fi

          # Unset HTTP Proxies by default
          unset http_proxy
          unset https_proxy
          unset no_proxy

          # Script Help Function
          showHelp() {
          cat << EOH
          Usage: $0 [-p -v] [-i] [-h]

          Image a physical server with Harmonic cOS

          -p|	  	(OPTIONAL) Enable the HTTP Proxy
                  Note: HTTP Proxy is disabled by default

          -v|	  	(OPTIONAL) Enable verbose and xtrace mode (set -xv)

          -i|     (REQUIRED FOR INSTALL) Install Apollo (Harmonic cOS) .iso located in "${isoDir}" using ostree scripts

          -h|     Display help

          EOH
          }

          # Proxy setup function
          proxySetup() {
            if [[ ${proxy} == 1 ]]; then
              runPrint "Configuring HTTP(S) proxies"
              : "${http_proxy:=${proxyURI}}"  && export http_proxy="${http_proxy}"
              : "${https_proxy:=${proxyURI}}" && export https_proxy="${https_proxy}"
              : "${no_proxy:=${proxyIgnore}}" && export no_proxy="${no_proxy}"
              runprint "Proxy Information:
              http_proxy: ${http_proxy}
              http_proxy: ${https_proxy}
              no_proxy: ${no_proxy}
              "
            fi
            return
          }

          # Install ostree-production script packages
          ostreeSetup() {
            mkdir -p "${workingDir}"
            runPrint "Installing 'ostree-production' provider packages"
            for debPkg in ${ostreePackages}; do
              runPrint "Downloading ${debPkg}"
              wget "http://${webserverHost}:${webserverPort}/packages/${debPkg}" -O "${workingDir}/${debPkg}"
              runPrint "Installing ${debPkg}"
              dpkg -i "${workingDir}/${debPkg}"
            done
            return
          }

          # Download Apollo ISO
          harmonicSetup() {
            runPrint "Creating ${isoDir}"
            mkdir -p "${isoDir}"
            runPrint "Downloading ${apolloISO} to ${isoDir}"
            wget "http://${webserverHost}:${webserverPort}/apollo/latest" -O "${isoDir}/${apolloISO}"
            return
          }

          # Install "${apolloISO}" to "${physicalDisk}"
          harmonicInstall() {
            runPrint "Listing .iso files located in ${isoDir}"
            ostree-production list-isos
            runPrint "Installing ${isoDir}/${apolloISO} to ${physicalDisk}"
            ostree-production -D "${physicalDisk}" from "${isoDir}/${apolloISO}" <<EOS
            y
            y
            y
            y
          EOS
            return
          }

          # Main script options menu
          while getopts "hvpi" o; do
              case "${o}" in
                  h)
                      showHelp
                      exit 0
                      ;;
                  v)
                      set -xv
                      ;;
                  p)
                      proxy=1
                      ;;
                  i)
                      download=1
                      install=1
                      ;;
                  *)  showHelp
                      exit 1
                      ;;

              esac
          done
          shift $((OPTIND-1))
          
          # Main Runners
          if [[ ${proxy} == 1 ]]; then
            proxySetup
          fi

          if [[ "${download}" == 1 ]]; then
            ostreeSetup
          fi

          if [[ "${install}" == 1 ]]; then
            harmonicSetup
            harmonicInstall
          fi

          exit 0
    runcmd:
      - echo "---------------- Harmonic Installer - Install Script (RUNNING) -----------------"s
      - sudo /run/harmonic/harmonic-installer.sh -iv
      - echo "------------------- Harmonic Installer - Install Script (COMPLETED) ------------------"
      - echo "------------------- Harmonic Installer - Rebooting System ------------------"
      - sudo shutdown -r now
